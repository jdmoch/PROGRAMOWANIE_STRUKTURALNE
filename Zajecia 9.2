#include <stdio.h>
///cw 5_2_9
void wytnij(char *napis,int n,int m){
int i,j;
for(j=0;napis[j]!=0;j++){
}
if(j+1>m){
    for(i=0;i+m<j;i++){
        napis[n+1]=napis[m+i+1];
    }
}
else if((n<j)&&(j+1<=m)){
    napis[n]=0;
}
}
int main()
{
    char napiszad9[40]="z tego napisu mamy cos wyciac";
    printf(napiszad9);
    printf("\n");
    wytnij(napiszad9,5,15);
    printf(napiszad9);
    printf("\n");
    char napiszakrotki[40]="krotki";
    printf(napiszakrotki);
    printf("\n");
    wytnij(napiszakrotki,8,12);
    printf(napiszakrotki);
    printf("\n");
    char napiszsredniodlugi[20]="sredni";
    printf(napiszsredniodlugi);
    printf("\n");
    wytnij(napiszsredniodlugi,4,10);
    printf(napiszsredniodlugi);
    return 0;
}
#include <stdio.h>
#include <stdbool.h>
///cw 5_2_10 nie dziala
void wytnij(char *napis,int n,int m){
int i,j;
for(j=0;napis[j]!=0;j++){}
if(j+1>m){
    for(i=0;i+m<j;i++){
        napis[n+1]=napis[m+i+1];
    }
}
else if((n<j)&&(j+1<=m)){
    napis[n]=0;
}
}
bool porownaj(char * napis1,char * napis2,int n){
int i;
for(i=0;(napis1[i]!=0)&&napis2[i]!=0;i++)
    if(napis1[n+1]!=napis2[i])
{
    return false;
}
if(napis2[i]==0){
    return true;
}
else{
    return false;
}
}
void wytnij2(char *napis1,char *napis2){
int i,dl;
for(dl=0;napis2[dl]!=0;dl++){}
    for(i=0;napis1[i]!=0;i++){
     if(porownaj(napis1,napis2,i))
     {
         wytnij(napis1,i,i+dl-1);
         return;
     }
    }
}
int main()
{
    char napiszad101[40]="napis z ktorego ktorego wycinamy";
    char napiszad102[40]="ktorego";
    wytnij2(napiszad101,napiszad102);
    printf(napiszad101);
    return 0;
}
#include <stdio.h>
#include <stdbool.h>
///cw 5_2_13 nie dziala
void wytnijtesame(char * napis1,char *napis2){
int i,j;
for(int i=0,j=0;napis1[i]!=0;i++)
{
    if(napis1[i]!=napis2[i]){
        napis1[j]=napis1[i];
        j++;
    }
}
napis1[j]=0;
}
int main()
{
    char napiszad131[40]="arbuzek";
    char napiszad132[40]="arbiter";
    wytnijtesame(napiszad131,napiszad132);
    printf(napiszad131);
    return 0;
}
#include <stdio.h>
///cw 5_2_20
char * godzina(int godz,int min,int sec){
char * wynik=malloc(9*sizeof(char));
sprintf(wynik,"%02d:%02d:%02d",godz,min,sec);
return wynik;
}
int main()
{
    printf(godzina(14,19,5));
    return 0;
}
#include <stdio.h>
#include <wchar.h>
///cw 5_2_26
void maleduze(char * napis){
int i;
for(i=0;napis[i]!=0;i++){
napis[i]=towupper(napis[i]);
}
}
int main()
{
    char napis1[80]="Adi ma kota";
    printf(napis1);
    printf("\n");
    maleduze(napis1);
    printf(napis1);
    return 0;
}
#include <stdio.h>
#include <wchar.h>
#include <string.h>
///cw 5_2_22
char * sklej(char * napis1,char *napis2,char * napis3){
char * wyn=malloc((strlen(napis1)+strlen(napis2)+strlen(napis3)+1)*sizeof(char));
strcpy(wyn,napis1);
strcat(wyn,napis2);
strcat(wyn,napis3);
return wyn;
}
int main()
{
    char napis1[80]="Adi ma kota";
    char napis2[30]=" i nie jest szczesliwy";
    char napis3[40]=" bo studiuje informatyke";
    printf(sklej(napis1,napis2,napis3));
    return 0;
}

TABLICE----------------------------------------------


POTRZEBNE
#include <stdio.h>
#include <stdlib.h>



int **alokuj(unsigned int n, unsigned int m){
    int **t = malloc(n*sizeof(int*));
    int i;
    for(i=0;i<n;i++){
        t[i] = malloc(m*sizeof(int*));
    }
    return t;
}

int(* alokuj2(unsigned int n, unsigned int m))[]{
    return malloc(n*sizeof(int[m]));
}

void wypisz(int **t, unsigned int n, unsigned int m){
    int i,j;
    for(i=0;i<n;i++){
        for(j=0;j<m;j++){
            printf("%d\t", t[i][j]);
        }
        printf("\n");
    }
}

void wypisz2(unsigned int n, unsigned int m, int t[][m]){
    int i,j;
    for(i=0;i<n;i++){
        for(j=0;j<m;j++){
            printf("%d\t", t[i][j]);
        }
        printf("\n");
    }
}

void wczytaj(int **t, unsigned int n, unsigned int m){
    int i,j;
    for(i=0;i<n;i++){
        for(j=0;j<m;j++){
            scanf("%d", &t[i][j]);
        }
    }
}

void wczytaj2(unsigned int n, unsigned int m, int t[][m]){
    int i,j;
    for(i=0;i<n;i++){
        for(j=0;j<m;j++){
            scanf("%d", &t[i][j]);
        }
    }
}

int main() {
    int **t = alokuj(3,3);
    wczytaj(t,3,3);
    printf("\n");
    wypisz(t,3,3);
    printf("\n");
    int tab[3][4];
    wczytaj2(3, 4, tab);
    printf("\n");
    wypisz2(3, 4, tab);
    printf("\n");
    int tablica[4][4] = {{1, 2, 3, 4}, {5, 6, 7, 8}, {9, 10, 11, 12}, {13, 14, 15, 16}};
    wypisz2(4, 4, tablica);


}

zad6.2.3

void zwolnij(int **t, unsigned int n, unsigned int m){
    int i;
    for(i=0;i<n;i++){
        free(t[i]);
    }
    free(t);
}


zad6.2.7
int **alokujtrojkat(unsigned int n){
    int **t = malloc(n*sizeof(int*));
    int i;
    for(i=0;i<n;i++){
        t[i] = malloc((i+1)*sizeof(int*));
    }
    return t;
}

zad na plusa

int **alokujpierscien(unsigned int n){
    int **t = malloc(n*sizeof(int*));
    int i;
    for(i=0;i<n;i++){
        if(i==0 or i==n-1){
        t[i] = malloc(n*sizeof(int*));
    }else
        t[i] = malloc(2*sizeof(int*));
    }
    return t;
}-
-----------------------------------------------------------------------------------------
#include<stdio.h>
#include<stdlib.h>

///cw 6_2_1
int** alokuj(unsigned int n, unsigned int m){
int *t=malloc(n*sizeof(int));
int i;
for(i=0;i<n;i++)
{
    t[i]=malloc(m*sizeof(int));
}
return t;
}

///cw 6_2_2
int(* alokuj2(unsigned int n, unsigned int m))[]{
return malloc(n*sizeof(int[m]));
}

///cw 6_2_18
void wypisz(int **t, unsigned int n, unsigned int m){
    int i,j;
for(i=0;i<n;i++)
{
    for(j=0;j<m;j++)
{
    printf("%d\t",t[i][j]);
}
printf("\n");
}
}

void wypisz2(unsigned int n,unsigned int m, int t[][m]){
int i,j;
for(i=0;i<n;i++)
{
    for(j=0;j<m;j++)
{
       printf("%d\t",t[i][j]);
    }
    printf("\n");
}
}

///wczytaj
void wczytaj(int** t, unsigned int n,unsigned int m){
int i,j;
for(i=0;i<n;i++)
{
    for(j=0;j<m;j++)
{
       scanf("%d",&t[i][j]);
    }
}
}

///wczytaj2
void wczytaj2(unsigned int n,unsigned int m, int t[][m]){
int i,j;
for(i=0;i<n;i++)
{
    for(j=0;j<m;j++)
{
       scanf("%d",&t[i][j]);
    }
}
}

int main(){
    ///tablica tablic
      int **t=alokuj(3,3);
    wczytaj(t,3,3);
wypisz(t,3,3);
///tablica dwuwymiarowa
int t2[3][3];
wczytaj2(3,3,t2);
wypisz2(3,3,t2);
///inicjalizacja bez wczytywania
int t3[4][4]={{20,2,5,8},{2,8,31,4},{5,6,7,8},{5,6,7,8}};
wypisz2(4,4,t3);
}
