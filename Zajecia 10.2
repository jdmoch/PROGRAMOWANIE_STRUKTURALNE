//6.2.9
//6.2.10
#include <stdio.h>
#include <stdlib.h>
void wypisz(int **t, unsigned int n, unsigned int m){
    int i,j;
    for(i=0;i<n;i++){
        for(j=0;j<m;j++){
            printf("%d\t", t[i][j]);
        }
        printf("\n");
    }
}
void wypisz2(unsigned int n,unsigned int m,int t[][m]){
int i,j;
for(i=0;i<n;i++){
    for(j=0;j<m;j++){
        printf("%d\t",t[i][j]);
    }
    printf("\n");
}
}
int ** alokuj(unsigned int n,unsigned int m){
int **t=malloc(n*sizeof(int*));
int i;
for(i=0;i<n;i++){
    t[i]=malloc(m*sizeof(int));
}
return t;
}
void wczytaj(int ** t,unsigned int n,unsigned int m){
int i,j;
for(i=0;i<n;i++){
    for(j=0;j<m;j++){
        scanf("%d",&t[i][j]);
    }
}
}
void zeruj(int** t,unsigned int n,unsigned int m){
int i,j;
for(i=0;i<n;i++){
    for(j=0;j<m;j++){
        t[i][j]=0;
    }
}
}
void zeruj3(unsigned int n,unsigned int m,int t[][m]){
int i,j;
for(i=0;i<n;i++){
    for(j=0;j<m;j++){
        t[i][j]=0;
    }
}
}
int main()
{
    int **t=alokuj(3,2);
    wczytaj(t,3,2);
    wypisz(t,3,2);
    zeruj(t,3,2);
    wypisz(t,3,2); 
    int t[3][7]={{20,2,5,7,8,-11,-81},{2,8,31,14}};
    wypisz2(3,7,t);
    zeruj3(3,7,t);
    wypisz2(3,7,t);
    return 0;
}
//6.2.12
int suma2(int** t,unsigned int n,unsigned int m){
int i,j;
int suma=0;
for(i=0;i<n;i++){
    for(j=0;j<m;j++){
        suma=suma+t[i][j];
    }
}
//main
printf("suma: %d",suma2(t,3,2));
/// na kolokwium zadanie: jezeli beda poweuidzmy 5 takich samych wynikow to zwroc nie skrajny wieresz (czyli nie pierwszy i nie ostatni)
// robilismy 6.2.16 ale to jest to samo co 17
//6.2.16 ale na tablicy 2wymiarowej
int max(unsigned int n,unsigned int m,int t[][m]){
int i,j;
int max=0;
int suma=0;
int indeks=0;
for(i=0;i<n;i++){
    for(j=0;j<m;j++){
        suma=suma+t[i][j];
    }
    if(i==0){
        max=suma;
    }
    if(max<suma){
        max=suma;
        indeks=i;
    }
    suma=0;
}
//main
int t[4][3]={{4,1,8},{2,3,2},{3,10,6},{5,4,2}};
    wypisz2(4,3,t);
    printf("indeks %d",max(4,3,t));
//6.2.17
double max(unsigned int n,unsigned int m,int t[][m]){
int i,j;
int suma,max;
for(i=0;i<n;i++){
    for(j=0;j<m;j++){
        suma=0;
        suma=suma+t[i][j];
    }
    if(i==0){
        max=suma;
    }
    if(max<suma){
        max=suma;

    }
}
return ((double)(max)/m);
}
//main
printf("wartosc %lf",max(4,3,t));
//6.2.19 nie dziala
void przepisz(int **t,int **r,unsigned int m,unsigned int n){
int i,j;
for(i=0;i<n;i++){
    for(j=0;j<m;j++){
        r[i][j]=t[i][j];
    }
}
}
//main 
    int **t=alokuj(3,3);
    int **r=alokuj(3,3);
    wczytaj(t,3,3);
    wypisz(t,3,3);
    przepisz(t,r,3,3);
    wypisz(r,3,3);
//6.2.20
void zamiana(int **t,int **r,unsigned int m,unsigned int n){
int i,j;
int pom;
for(i=0;i<n;i++){
    for(j=0;j<m;j++){
        pom=r[i][j];
        r[i][j]=t[i][j];
        t[i][j]=pom;
    }
}
}
//main 

    int **t=alokuj(3,3);
    int **r=alokuj(3,3);
    wczytaj(t,3,3);
    wypisz(t,3,3);
    wczytaj(r,3,3);
    wypisz(r,3,3);
    zamiana(t,r,3,3);
    wypisz(t,3,3);
    wypisz(r,3,3);
    return 0;
//6.2.21
void odwrotnosc(int **t,unsigned int m,unsigned int n){
int i,j;
int pom;
for(i=0;i<n;i++){
    for(j=0;j<m/2;j++){
        pom=t[i][j];
        t[i][j]=t[i][m-1-j];
        t[i][m-1-j]=pom;
    }
}
}
//main
    int **t=alokuj(3,3);
    wczytaj(t,3,3);
    wypisz(t,3,3);
    odwrotnosc(t,3,3);
    wypisz(t,3,3);
///////// ** tablica dwuwymiarowa ///////////////////
///////// t[][] tablica tablic /////////////////////
//6.2.23
void zamianawierszy(unsigned int n,unsigned int m,int t[][m]){
int i,j;
int pom;
for(j=0;j<m;j++){
    pom=t[n-1][j];
    for(i=n-1;i>0;i--){
        t[i][j]=t[i-1][j];
    }
    t[0][j]=pom;
}
}
//main
int t[4][3]={{4,1,8},{2,3,2},{3,10,6},{5,4,2}};
    wypisz2(4,3,t);
    zamianawierszy(4,3,t);
    wypisz2(4,3,t);
    return 0
    ///// duze prawdopodobienstwo ze pojawi sie zadanie tego typu na kolokwium (troche zmienione niz na lekcji np moze dwa w dol czy cos)
/// wszystkie zadania z tablic do kolokwium omowione
//na next zajeciach zadania mniej wazne z tablic 
//zad dodatkowe
/// zrob funkcje ktora bedzie int ** tarcza_do_rzutek(unsigned int n)
/// jesli wywowlany na 1x1 => 1
/// 2x2 => 11 11 
/// 3x3 => 111 121 111
/// 4x4 => 1111 1221 1221 1111
/// 5x5 => 11111 12221 12321 12221 11111
///itd. (te liczby to macierze, spacja oznacza nowy wiersz)
